=========
rest-pattern: array / list rest
=========

let larger_list: list<int> = list([5, ...my_list]);

---

(source_file
  (let_decl
    (var_pattern (Name))
    (type_annotation
      (type_ctor_app (TypeName) (TypeName)))
    (expr
      (call_expr
        (lambda (Name))
          (expr
            (array_literal
              (expr (Int))
            (array_item_rest_expr
              (expr (Name)))))))))

=========
rest-pattern: object rest
=========

let xy_translate = ([p, vec]: [point, vector]): point =>
  ({...p, x: p.x + vec.dx, y: p.y + vec.dy});

---

