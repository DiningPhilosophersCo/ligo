=========
list-spread: array / list spread
=========

let larger_list: list<int> = list([5, ...my_list]);

---

(source_file
  (let_decl
    (var_pattern (NameDecl))
    (app_type (TypeName) (TypeName))
    (list
      (list_literal
        (Int)
        (spread (Name))))))

=========
rest-pattern: object rest
=========

let xy_translate = ([p, vec]: [point, vector]): point =>
  ({...p, x: p.x + vec.dx, y: p.y + vec.dy});

---

(source_file
  (let_decl
    (var_pattern (NameDecl))
    (fun_expr
      (parameter
        (tuple (Name) (Name))
        (tuple_type (TypeName) (TypeName)))
      (TypeName)
      (body
        (paren_expr
          (record_update
            (spread (Name))
            (record_field
              (property_name (Name))
              (binary_call
                (data_projection (Name) (Name))
                (data_projection (Name) (Name))))
            (record_field
              (property_name (Name))
              (binary_call
                (data_projection (Name) (Name))
                (data_projection (Name) (Name))))))))))
