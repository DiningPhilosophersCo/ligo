==================
type declarations
==================

type breed = string;


type account_balances = map<address, tez>;


type account_data = {
  balance: tez,
  transactions: nat
};

type parameter =
  ["Back"]
| ["Claim"]
| ["Withdraw"];


type storage = {
  owner    : address,
  goal     : tez,
  deadline : timestamp,
  backers  : map<address, tez>,
  funded   : bool
};

type xs = list<int>

type foo<a> = [a , unit]
type bar<a,b> = [foo<a> , b]


type color =
| ["RGB", [int, int, int]]
| ["Gray", int]
| ["Default"];

export type simpl = int

export type complex = [int, int]