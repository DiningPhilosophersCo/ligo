;; Build of the lexer

(ocamllex LexToken)

;; Build of the parser

(menhir
  (merge_into Parser)
  (modules ParToken Parser)
  (flags -la 1 --table --strict --external-tokens LexToken))

;; Build of the parser as a library

(library
  (name parser_pascaligo)
  (public_name ligo.parser.pascaligo)
  (modules
     SyntaxError AST pascaligo Parser ParserLog LexToken)
  (libraries
     menhirLib
     parser_shared
     hex
     simple-utils
     tezos-utils)
  (preprocess
    (pps bisect_ppx --conditional))
  (flags (:standard -open Parser_shared -open Simple_utils)))

;; Build of the unlexer (for covering the
;; error states of the LR automaton)

(executable
  (name Unlexer)
  (libraries str)
  (preprocess
    (pps bisect_ppx --conditional))
  (modules Unlexer))

;; Local build of a standalone lexer

(executable
  (name LexerMain)
  (libraries
     hex simple-utils tezos-utils parser_pascaligo)
  (modules LexerMain)
  (preprocess
    (pps bisect_ppx --conditional))
  (flags (:standard -open Parser_shared -open Parser_pascaligo)))

;; Local build of a standalone parser

(executable
  (name ParserMain)
  (libraries parser_pascaligo)
  (modules
     ParErr ParserMain)
  (preprocess
    (pps bisect_ppx --conditional))
  (flags (:standard -open Simple_utils -open Parser_shared -open Parser_pascaligo)))
