(rule (targets address.output) (action  (with-stdout-to address.output (run ligo "pretty-print" "address.religo"))) (deps address.religo))
(rule (targets amount.output) (action (with-stdout-to amount.output (run ligo "pretty-print" "amount.religo"))) (deps amount.religo))
(rule (targets arithmetic.output) (action (with-stdout-to arithmetic.output (run ligo "pretty-print" "arithmetic.religo"))) (deps arithmetic.religo))
(rule (targets bad_address_format.output) (action (with-stdout-to bad_address_format.output (run ligo "pretty-print" "bad_address_format.religo"))) (deps bad_address_format.religo))
(rule (targets balance_constant.output) (action (with-stdout-to balance_constant.output (run ligo "pretty-print" "balance_constant.religo"))) (deps balance_constant.religo))
(rule (targets bitwise_arithmetic.output) (action (with-stdout-to bitwise_arithmetic.output (run ligo "pretty-print" "bitwise_arithmetic.religo"))) (deps bitwise_arithmetic.religo))
(rule (targets boolean_operators.output) (action (with-stdout-to boolean_operators.output (run ligo "pretty-print" "boolean_operators.religo"))) (deps boolean_operators.religo))
(rule (targets bytes_arithmetic.output) (action (with-stdout-to bytes_arithmetic.output (run ligo "pretty-print" "bytes_arithmetic.religo"))) (deps bytes_arithmetic.religo))
(rule (targets bytes_unpack.output) (action (with-stdout-to bytes_unpack.output (run ligo "pretty-print" "bytes_unpack.religo"))) (deps bytes_unpack.religo))
(rule (targets check_signature.output) (action (with-stdout-to check_signature.output (run ligo "pretty-print" "check_signature.religo"))) (deps check_signature.religo))
(rule (targets closure.output) (action (with-stdout-to closure.output (run ligo "pretty-print" "closure.religo"))) (deps closure.religo))
(rule (targets condition-shadowing.output) (action (with-stdout-to condition-shadowing.output (run ligo "pretty-print" "condition-shadowing.religo"))) (deps condition-shadowing.religo))
(rule (targets condition.output) (action (with-stdout-to condition.output (run ligo "pretty-print" "condition.religo"))) (deps condition.religo))
(rule (targets counter.output) (action (with-stdout-to counter.output (run ligo "pretty-print" "counter.religo"))) (deps counter.religo))
(rule (targets crypto.output) (action (with-stdout-to crypto.output (run ligo "pretty-print" "crypto.religo"))) (deps crypto.religo))
(rule (targets empty_case.output) (action (with-stdout-to empty_case.output (run ligo "pretty-print" "empty_case.religo"))) (deps empty_case.religo))
(rule (targets eq_bool.output) (action (with-stdout-to eq_bool.output (run ligo "pretty-print" "eq_bool.religo"))) (deps eq_bool.religo))
(rule (targets failwith.output) (action (with-stdout-to failwith.output (run ligo "pretty-print" "failwith.religo"))) (deps failwith.religo))
(rule (targets function-shared.output) (action (with-stdout-to function-shared.output (run ligo "pretty-print" "function-shared.religo"))) (deps function-shared.religo))
(rule (targets high-order.output) (action (with-stdout-to high-order.output (run ligo "pretty-print" "high-order.religo"))) (deps high-order.religo))
(rule (targets implicit_account.output) (action (with-stdout-to implicit_account.output (run ligo "pretty-print" "implicit_account.religo"))) (deps implicit_account.religo))
(rule (targets included.output) (action (with-stdout-to included.output (run ligo "pretty-print" "included.religo"))) (deps included.religo))
(rule (targets includer.output) (action (with-stdout-to includer.output (run ligo "pretty-print" "includer.religo"))) (deps includer.religo))
(rule (targets key_hash.output) (action (with-stdout-to key_hash.output (run ligo "pretty-print" "key_hash.religo"))) (deps key_hash.religo))
(rule (targets lambda.output) (action (with-stdout-to lambda.output (run ligo "pretty-print" "lambda.religo"))) (deps lambda.religo))
(rule (targets lambda2.output) (action (with-stdout-to lambda2.output (run ligo "pretty-print" "lambda2.religo"))) (deps lambda2.religo))
(rule (targets let_multiple.output) (action (with-stdout-to let_multiple.output (run ligo "pretty-print" "let_multiple.religo"))) (deps let_multiple.religo))
(rule (targets letin.output) (action (with-stdout-to letin.output (run ligo "pretty-print" "letin.religo"))) (deps letin.religo))
(rule (targets list.output) (action (with-stdout-to list.output (run ligo "pretty-print" "list.religo"))) (deps list.religo))
(rule (targets loop.output) (action (with-stdout-to loop.output (run ligo "pretty-print" "loop.religo"))) (deps loop.religo))
(rule (targets map.output) (action (with-stdout-to map.output (run ligo "pretty-print" "map.religo"))) (deps map.religo))
(rule (targets match_bis.output) (action (with-stdout-to match_bis.output (run ligo "pretty-print" "match_bis.religo"))) (deps match_bis.religo))
(rule (targets match.output) (action (with-stdout-to match.output (run ligo "pretty-print" "match.religo"))) (deps match.religo))
(rule (targets michelson_pair_tree.output) (action (with-stdout-to michelson_pair_tree.output (run ligo "pretty-print" "michelson_pair_tree.religo"))) (deps michelson_pair_tree.religo))
(rule (targets multiple-parameters.output) (action (with-stdout-to multiple-parameters.output (run ligo "pretty-print" "multiple-parameters.religo"))) (deps multiple-parameters.religo))
(rule (targets multisig.output) (action (with-stdout-to multisig.output (run ligo "pretty-print" "multisig.religo"))) (deps multisig.religo))
(rule (targets no_semicolon.output) (action (with-stdout-to no_semicolon.output (run ligo "pretty-print" "no_semicolon.religo"))) (deps no_semicolon.religo))
(rule (targets pledge.output) (action (with-stdout-to pledge.output (run ligo "pretty-print" "pledge.religo"))) (deps pledge.religo))
(rule (targets record.output) (action (with-stdout-to record.output (run ligo "pretty-print" "record.religo"))) (deps record.religo))
(rule (targets recursion.output) (action (with-stdout-to recursion.output (run ligo "pretty-print" "recursion.religo"))) (deps recursion.religo))
(rule (targets self_address.output) (action (with-stdout-to self_address.output (run ligo "pretty-print" "self_address.religo"))) (deps self_address.religo))
(rule (targets set_arithmetic.output) (action (with-stdout-to set_arithmetic.output (run ligo "pretty-print" "set_arithmetic.religo"))) (deps set_arithmetic.religo))
(rule (targets set_delegate.output) (action (with-stdout-to set_delegate.output (run ligo "pretty-print" "set_delegate.religo"))) (deps set_delegate.religo))
(rule (targets single_record_item.output) (action (with-stdout-to single_record_item.output (run ligo "pretty-print" "single_record_item.religo"))) (deps single_record_item.religo))
(rule (targets string_arithmetic.output) (action (with-stdout-to string_arithmetic.output (run ligo "pretty-print" "string_arithmetic.religo"))) (deps string_arithmetic.religo))
(rule (targets super-counter.output) (action (with-stdout-to super-counter.output (run ligo "pretty-print" "super-counter.religo"))) (deps super-counter.religo))
(rule (targets tuple_list.output) (action (with-stdout-to tuple_list.output (run ligo "pretty-print" "tuple_list.religo"))) (deps tuple_list.religo))
(rule (targets tuple_param_destruct.output) (action (with-stdout-to tuple_param_destruct.output (run ligo "pretty-print" "tuple_param_destruct.religo"))) (deps tuple_param_destruct.religo))
(rule (targets tuple_type.output) (action (with-stdout-to tuple_type.output (run ligo "pretty-print" "tuple_type.religo"))) (deps tuple_type.religo))
(rule (targets tuple.output) (action (with-stdout-to tuple.output (run ligo "pretty-print" "tuple.religo"))) (deps tuple.religo))
(rule (targets tuples_no_annotation.output) (action (with-stdout-to tuples_no_annotation.output (run ligo "pretty-print" "tuples_no_annotation.religo"))) (deps tuples_no_annotation.religo))
(rule (targets tuples_sequences_functions.output) (action (with-stdout-to tuples_sequences_functions.output (run ligo "pretty-print" "tuples_sequences_functions.religo"))) (deps tuples_sequences_functions.religo))
(rule (targets variant.output) (action (with-stdout-to variant.output (run ligo "pretty-print" "variant.religo"))) (deps variant.religo))
(rule (targets website2.output) (action (with-stdout-to website2.output (run ligo "pretty-print" "website2.religo"))) (deps website2.religo))


(alias (name runtest) (action (diff expected/address.religo address.output)))
(alias (name runtest) (action (diff expected/amount.religo amount.output)))
(alias (name runtest) (action (diff expected/arithmetic.religo arithmetic.output)))
(alias (name runtest) (action (diff expected/bad_address_format.religo bad_address_format.output)))
(alias (name runtest) (action (diff expected/balance_constant.religo balance_constant.output)))
(alias (name runtest) (action (diff expected/bitwise_arithmetic.religo bitwise_arithmetic.output)))
(alias (name runtest) (action (diff expected/boolean_operators.religo boolean_operators.output)))
(alias (name runtest) (action (diff expected/bytes_arithmetic.religo bytes_arithmetic.output)))
(alias (name runtest) (action (diff expected/bytes_unpack.religo bytes_unpack.output)))
(alias (name runtest) (action (diff expected/check_signature.religo check_signature.output)))
(alias (name runtest) (action (diff expected/closure.religo closure.output)))
(alias (name runtest) (action (diff expected/condition-shadowing.religo condition-shadowing.output)))
(alias (name runtest) (action (diff expected/condition.religo condition.output)))
(alias (name runtest) (action (diff expected/counter.religo counter.output)))
(alias (name runtest) (action (diff expected/crypto.religo crypto.output)))
(alias (name runtest) (action (diff expected/empty_case.religo empty_case.output)))
(alias (name runtest) (action (diff expected/eq_bool.religo eq_bool.output)))
(alias (name runtest) (action (diff expected/failwith.religo failwith.output)))
(alias (name runtest) (action (diff expected/function-shared.religo function-shared.output)))
(alias (name runtest) (action (diff expected/high-order.religo high-order.output)))
(alias (name runtest) (action (diff expected/implicit_account.religo implicit_account.output)))
(alias (name runtest) (action (diff expected/included.religo included.output)))
(alias (name runtest) (action (diff expected/includer.religo includer.output)))
(alias (name runtest) (action (diff expected/key_hash.religo key_hash.output)))
(alias (name runtest) (action (diff expected/lambda.religo lambda.output)))
(alias (name runtest) (action (diff expected/lambda2.religo lambda2.output)))
(alias (name runtest) (action (diff expected/let_multiple.religo let_multiple.output)))
(alias (name runtest) (action (diff expected/letin.religo letin.output)))
(alias (name runtest) (action (diff expected/list.religo list.output)))
(alias (name runtest) (action (diff expected/loop.religo loop.output)))
(alias (name runtest) (action (diff expected/map.religo map.output)))
(alias (name runtest) (action (diff expected/match_bis.religo match_bis.output)))
(alias (name runtest) (action (diff expected/match.religo match.output)))
(alias (name runtest) (action (diff expected/michelson_pair_tree.religo michelson_pair_tree.output)))
(alias (name runtest) (action (diff expected/multiple-parameters.religo multiple-parameters.output)))
(alias (name runtest) (action (diff expected/multisig.religo multisig.output)))
(alias (name runtest) (action (diff expected/no_semicolon.religo no_semicolon.output)))
(alias (name runtest) (action (diff expected/pledge.religo pledge.output)))
(alias (name runtest) (action (diff expected/record.religo record.output)))
(alias (name runtest) (action (diff expected/recursion.religo recursion.output)))
(alias (name runtest) (action (diff expected/self_address.religo self_address.output)))
(alias (name runtest) (action (diff expected/set_arithmetic.religo set_arithmetic.output)))
(alias (name runtest) (action (diff expected/set_delegate.religo set_delegate.output)))
(alias (name runtest) (action (diff expected/single_record_item.religo single_record_item.output)))
(alias (name runtest) (action (diff expected/string_arithmetic.religo string_arithmetic.output)))
(alias (name runtest) (action (diff expected/super-counter.religo super-counter.output)))
(alias (name runtest) (action (diff expected/tuple_list.religo tuple_list.output)))
(alias (name runtest) (action (diff expected/tuple_param_destruct.religo tuple_param_destruct.output)))
(alias (name runtest) (action (diff expected/tuple_type.religo tuple_type.output)))
(alias (name runtest) (action (diff expected/tuple.religo tuple.output)))
(alias (name runtest) (action (diff expected/tuples_no_annotation.religo tuples_no_annotation.output)))
(alias (name runtest) (action (diff expected/tuples_sequences_functions.religo tuples_sequences_functions.output)))
(alias (name runtest) (action (diff expected/variant.religo variant.output)))
(alias (name runtest) (action (diff expected/website2.religo website2.output)))

(alias (name runtest) (action  (ignore-stdout (run ligo print-cst address.output -s reasonligo))) (deps address.output))
(alias (name runtest) (action  (ignore-stdout (run ligo print-cst amount.output -s reasonligo))) (deps amount.output))
(alias (name runtest) (action  (ignore-stdout (run ligo print-cst arithmetic.output -s reasonligo))) (deps arithmetic.output))
(alias (name runtest) (action  (ignore-stdout (run ligo print-cst bad_address_format.output -s reasonligo))) (deps bad_address_format.output))
(alias (name runtest) (action  (ignore-stdout (run ligo print-cst balance_constant.output -s reasonligo))) (deps balance_constant.output))
(alias (name runtest) (action  (ignore-stdout (run ligo print-cst bitwise_arithmetic.output -s reasonligo))) (deps bitwise_arithmetic.output))
(alias (name runtest) (action  (ignore-stdout (run ligo print-cst boolean_operators.output -s reasonligo))) (deps boolean_operators.output))
(alias (name runtest) (action  (ignore-stdout (run ligo print-cst bytes_arithmetic.output -s reasonligo))) (deps bytes_arithmetic.output))
(alias (name runtest) (action  (ignore-stdout (run ligo print-cst bytes_unpack.output -s reasonligo))) (deps bytes_unpack.output))
(alias (name runtest) (action  (ignore-stdout (run ligo print-cst check_signature.output -s reasonligo))) (deps check_signature.output))
(alias (name runtest) (action  (ignore-stdout (run ligo print-cst closure.output -s reasonligo))) (deps closure.output))
(alias (name runtest) (action  (ignore-stdout (run ligo print-cst condition-shadowing.output -s reasonligo))) (deps condition-shadowing.output))
(alias (name runtest) (action  (ignore-stdout (run ligo print-cst condition.output -s reasonligo))) (deps condition.output))
(alias (name runtest) (action  (ignore-stdout (run ligo print-cst counter.output -s reasonligo))) (deps counter.output))
(alias (name runtest) (action  (ignore-stdout (run ligo print-cst crypto.output -s reasonligo))) (deps crypto.output))
(alias (name runtest) (action  (ignore-stdout (run ligo print-cst empty_case.output -s reasonligo))) (deps empty_case.output))
(alias (name runtest) (action  (ignore-stdout (run ligo print-cst eq_bool.output -s reasonligo))) (deps eq_bool.output))
(alias (name runtest) (action  (ignore-stdout (run ligo print-cst failwith.output -s reasonligo))) (deps failwith.output))
(alias (name runtest) (action  (ignore-stdout (run ligo print-cst function-shared.output -s reasonligo))) (deps function-shared.output))
(alias (name runtest) (action  (ignore-stdout (run ligo print-cst high-order.output -s reasonligo))) (deps high-order.output))
(alias (name runtest) (action  (ignore-stdout (run ligo print-cst implicit_account.output -s reasonligo))) (deps implicit_account.output))
(alias (name runtest) (action  (ignore-stdout (run ligo print-cst included.output -s reasonligo))) (deps included.output))
(alias (name runtest) (action  (ignore-stdout (run ligo print-cst includer.output -s reasonligo))) (deps includer.output))
(alias (name runtest) (action  (ignore-stdout (run ligo print-cst key_hash.output -s reasonligo))) (deps key_hash.output))
(alias (name runtest) (action  (ignore-stdout (run ligo print-cst lambda.output -s reasonligo))) (deps lambda.output))
(alias (name runtest) (action  (ignore-stdout (run ligo print-cst lambda2.output -s reasonligo))) (deps lambda2.output))
(alias (name runtest) (action  (ignore-stdout (run ligo print-cst let_multiple.output -s reasonligo))) (deps let_multiple.output))
(alias (name runtest) (action  (ignore-stdout (run ligo print-cst letin.output -s reasonligo))) (deps letin.output))
(alias (name runtest) (action  (ignore-stdout (run ligo print-cst list.output -s reasonligo))) (deps list.output))
(alias (name runtest) (action  (ignore-stdout (run ligo print-cst loop.output -s reasonligo))) (deps loop.output))
(alias (name runtest) (action  (ignore-stdout (run ligo print-cst map.output -s reasonligo))) (deps map.output))
(alias (name runtest) (action  (ignore-stdout (run ligo print-cst match_bis.output -s reasonligo))) (deps match_bis.output))
(alias (name runtest) (action  (ignore-stdout (run ligo print-cst match.output -s reasonligo))) (deps match.output))
(alias (name runtest) (action  (ignore-stdout (run ligo print-cst michelson_pair_tree.output -s reasonligo))) (deps michelson_pair_tree.output))
(alias (name runtest) (action  (ignore-stdout (run ligo print-cst multiple-parameters.output -s reasonligo))) (deps multiple-parameters.output))
(alias (name runtest) (action  (ignore-stdout (run ligo print-cst multisig.output -s reasonligo))) (deps multisig.output))
(alias (name runtest) (action  (ignore-stdout (run ligo print-cst no_semicolon.output -s reasonligo))) (deps no_semicolon.output))
(alias (name runtest) (action  (ignore-stdout (run ligo print-cst pledge.output -s reasonligo))) (deps pledge.output))
(alias (name runtest) (action  (ignore-stdout (run ligo print-cst record.output -s reasonligo))) (deps record.output))
(alias (name runtest) (action  (ignore-stdout (run ligo print-cst recursion.output -s reasonligo))) (deps recursion.output))
(alias (name runtest) (action  (ignore-stdout (run ligo print-cst self_address.output -s reasonligo))) (deps self_address.output))
(alias (name runtest) (action  (ignore-stdout (run ligo print-cst set_arithmetic.output -s reasonligo))) (deps set_arithmetic.output))
(alias (name runtest) (action  (ignore-stdout (run ligo print-cst set_delegate.output -s reasonligo))) (deps set_delegate.output))
(alias (name runtest) (action  (ignore-stdout (run ligo print-cst single_record_item.output -s reasonligo))) (deps single_record_item.output))
(alias (name runtest) (action  (ignore-stdout (run ligo print-cst string_arithmetic.output -s reasonligo))) (deps string_arithmetic.output))
(alias (name runtest) (action  (ignore-stdout (run ligo print-cst super-counter.output -s reasonligo))) (deps super-counter.output))
(alias (name runtest) (action  (ignore-stdout (run ligo print-cst tuple_list.output -s reasonligo))) (deps tuple_list.output))
(alias (name runtest) (action  (ignore-stdout (run ligo print-cst tuple_param_destruct.output -s reasonligo))) (deps tuple_param_destruct.output))
(alias (name runtest) (action  (ignore-stdout (run ligo print-cst tuple_type.output -s reasonligo))) (deps tuple_type.output))
(alias (name runtest) (action  (ignore-stdout (run ligo print-cst tuple.output -s reasonligo))) (deps tuple.output))
(alias (name runtest) (action  (ignore-stdout (run ligo print-cst tuples_no_annotation.output -s reasonligo))) (deps tuples_no_annotation.output))
(alias (name runtest) (action  (ignore-stdout (run ligo print-cst tuples_sequences_functions.output -s reasonligo))) (deps tuples_sequences_functions.output))
(alias (name runtest) (action  (ignore-stdout (run ligo print-cst variant.output -s reasonligo))) (deps variant.output))
(alias (name runtest) (action  (ignore-stdout (run ligo print-cst website2.output -s reasonligo))) (deps website2.output))
