(library
  (name multifix)
  (public_name ligo.multifix)
  (libraries
    tezos-utils
    lex
  )
  (modules ast parser user)
  (flags (:standard -w +1..62-4-9-44-40-42-48@39@33 -open Tezos_utils ))
  (preprocess
    (pps ppx_let)
  )
)

;; Generating parser

(rule
  (targets parser.ml parser.mli)
  (deps parser.mly ast.ml)
  (action (system "menhir --external-tokens Lex.Token lex/token.mly parser.mly --base parser"))
  (mode promote-until-clean)
)

(rule
 (targets parser.mly)
 (deps partial_parser.mly pre_parser.mly)
 (action (system "cat pre_parser.mly partial_parser.mly > parser.mly"))
 (mode promote-until-clean)
)

(rule
 (targets partial_parser.mly)
 (deps generator.exe)
 (action (system "./generator.exe parser > partial_parser.mly"))
 (mode promote-until-clean)
)

;; Generating AST

(rule
 (targets ast.ml)
 (deps generator.exe)
 (action (system "./generator.exe ast > ast.ml"))
 (mode promote-until-clean)
)

;; Generating Generator

(executable
  (name generator)
  (libraries
    ocamlgraph
    tezos-utils
    lex
  )
  (modules generator)
)

;; Tests

(alias
 (name runtest)
 (deps generator.exe)
 (action (system "./generator.exe parser ; ./generator.exe ast"))
)
