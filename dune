(ocamllex LexToken)
(ocamllex Lexer)

(menhir
 (merge_into Parser)
 (modules ParToken Parser)
 (flags -la 1 --explain --external-tokens LexToken)
)

(executables
 (names LexerMain ParserMain)
 (public_names ligo-lexer ligo-parser)
 (package ligo-parser)
 (modules_without_implementation
   Error
 )
 (libraries
   hex
   zarith
   getopt
   uutf
   str
 )
)

;; Les deux directives (rule) qui suivent sont pour le dev local.
;; Il suffit de faire "dune build Parser.exe" pour avoir un Parser.exe dans le dossier.
;; Pour le purger, il faut faire "dune clean".
(rule
  (targets Parser.exe)
  (deps ParserMain.exe)
  (action (copy ParserMain.exe Parser.exe))
  (mode promote-until-clean)
)

(rule
  (targets Lexer.exe)
  (deps LexerMain.exe)
  (action (copy LexerMain.exe Lexer.exe))
  (mode promote-until-clean)
)

(rule
  (targets Version.gitHEAD)
  (deps .gitHEAD)
  (action (run "sh" "-c" "if git symbolic-ref HEAD; then ln -s ../../.git/\"$(git symbolic-ref HEAD)\" Version.gitHEAD; else ln -s hd Version.gitHEAD; fi"))
)

(rule
  (targets Version.ml)
  (deps Version.gitHEAD)
  (action (run "sh" "-c" "printf 'let version = \"%s\"'\\\\n \"$(cat Version.gitHEAD)\" > Version.ml"))
  (mode promote-until-clean)
)
